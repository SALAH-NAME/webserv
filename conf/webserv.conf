# webserv.conf - Complete configuration file
# Covering all mandatory and bonus requirements from the subject

#####################################################################
# SECTION 1: GLOBAL CONFIGURATION DIRECTIVES
#####################################################################

# Global client body size limit
# Values: number + suffix (K, k, M, m, G, g)
# Range: 0 (unlimited) to system max
# Default if omitted: 1M
client_max_body_size 10M;

# Connection timeout settings
# Values: number (seconds)
# Range: 1-3600
# Default if omitted: 60
connection_timeout 60;

# Prevents CGI scripts from running indefinitely
cgi_timeout 60;

# (Optional: "Set a default file to answer if the request is a directory")
index index.html index.htm;

# (Optional: Save error logs)
error_log /logs/error.log;

# (Optional: Save access logs)
access_log /logs/access.log;

# Global default error pages
# Format: error_page [error_code] [path];
error_page 400 /error/400.html;
error_page 401 /error/401.html;
error_page 403 /error/403.html;
error_page 404 /error/404.html;
error_page 500 501 /error/50x.html;

#####################################################################
# SECTION 2: SERVER BLOCKS (MANDATORY PART)
#####################################################################

# Server block 1 - Default server
# (mandatory: "The first server for a host:port will be the default")
server { # Default server
    # Server identification
    listen 8080;                              # REQUIRED: Port to listen on (Range: 1-65535)
    host 127.0.0.1;                           # REQUIRED: Host IP address
    
    # Server names
    # Format: server_name [domain1] [domain2] [...];
    server_name example.com www.example.com;  # Server names
    
    # Server-specific error pages
    # (Optional: Override "Setup default error pages")
    error_page 404 /custom_errors/404.html;
    error_page 500 502 503 504 /custom_errors/50x.html;
    
    # Server-specific client body size limit
    # (Optional: Override "Limit client body size")
    client_max_body_size 20M;
    
    # Root location block
    location / { # Root location
        # ("Define a directory or a file from where the file should be searched")
        root /var/www/html;                   # Root directory path
        
        # (Optional: "Set a default file to answer if the request is a directory")
				# Default if omitted: index.html
        index index.html index.htm;
        
        # ("Define a list of accepted HTTP methods for the route")
        # Format: allowed_methods [METHOD1] [METHOD2] [...];
        # Valid values: GET, POST, DELETE
        allowed_methods GET POST DELETE;      # Subject requires GET, POST, DELETE
        
        # ("Turn on or off directory listing")
        # Values: on, off
        # Default if omitted: off
        autoindex off;                        # Directory listing disabled
    }
    
    # Location with directory listing enabled
    location /browse {
        root /var/www/public;                 # Root directory path
        index index.html;
        allowed_methods GET;                  # Allowed methods
        autoindex on;                         # Directory listing enabled
    }
    
    # (mandatory: "Define a HTTP redirection")
    location /redirect {
        # Format: return [status_code] [URL];
        # Status codes: 301 (permanent), 302 (temporary), 307 (temporary), 308 (permanent)
        return 301 /new-page;                 # HTTP redirection
    }
    
    # (mandatory: "Make the route able to accept uploaded files and configure where they should be saved")
    location /upload {
        root /var/www/uploads;                # Root directory path
        allowed_methods POST;                 # POST method for uploads
        client_max_body_size 50M;             # Optional: Override body size limit
    }
    
    # (mandatory: "Execute CGI based on certain file extension")
    # (mandatory: "Make it work with POST and GET methods")
    location ~ .php {
        root /var/www/html;                   # Root directory path
        allowed_methods GET POST;             # GET and POST for CGI
        cgi_pass /usr/bin/php-cgi;            # REQUIRED: Path to CGI executable
        
				# Prevents CGI scripts from running indefinitely
				cgi_timeout 120;
    }
    
    # Example of a route with specific path mapping
    # (mandatory: "if url /kapouet is rooted to /tmp/www, url /kapouet/pouic/toto/pouet is /tmp/www/pouic/toto/pouet")
    location /kapouet {
        root /tmp/www;                        # Maps /kapouet/test.html to /tmp/www/test.html
        index index.html;
        allowed_methods GET POST;             # Allowed methods
        autoindex off;
    }
}

# Server block 2 - Different server_name on same port
# (demonstrates that first server is default for host:port)
server {
    listen 8080;                              # REQUIRED: Port to listen on
    host 127.0.0.1;                           # REQUIRED: Host IP address
    server_name test.com;                     # Optional: Server names
    
    error_page 404 /custom_errors/test_404.html;
    
    location / {
        root /var/www/test;                   # Root directory path
        index index.html;
        # (mandatory: "You need at least GET, POST, and DELETE methods")
        allowed_methods GET POST DELETE;      # Allowed methods
        autoindex off;
    }
}

# Server block 3 - Different port
# (mandatory: "Your server must be able to listen to multiple _ports")
server {
    listen 9090;                              # REQUIRED: Different port
    host 127.0.0.1;                           # REQUIRED: Host IP address
    server_name example.com;                  # Optional: Server names
    
    location / {
        root /var/www/other;                  # Root directory path
        index index.html;
        allowed_methods GET POST DELETE;      # Allowed methods
        autoindex off;
    }
}

# Server block 4 - Different IP address
server {
    listen 8080;                              # REQUIRED: Port to listen on
    host 192.168.1.10;                        # REQUIRED: Different IP address
    server_name another.example.com;          # Optional: Server names
    
    location / {
        root /var/www/another;                # Root directory path
        index index.html;
        allowed_methods GET POST;             # Allowed methods
        autoindex off;
    }
}

#####################################################################
# SECTION 3: BONUS FEATURES
#####################################################################

# Server block with multiple CGI support
# (bonus: "Handle multiple CGI")
server {
    listen 7070;                              # REQUIRED: Port to listen on
    host 127.0.0.1;                           # REQUIRED: Host IP address
    server_name cgi.example.com;              # Optional: Server names
    
    # PHP CGI
    location ~ .php {
        root /var/www/cgi;                    # Root directory path
        allowed_methods GET POST;             # Allowed methods for CGI
        cgi_pass /usr/bin/php-cgi;            # REQUIRED: Path to PHP CGI executable
    }
    
    # Python CGI
    location ~ .py {
        root /var/www/cgi;                    # Root directory path
        allowed_methods GET POST;             # Allowed methods for CGI
        cgi_pass /usr/bin/python3;            # REQUIRED: Path to Python interpreter
    }
    
    # Shell CGI
    location ~ .sh {
        root /var/www/cgi;                    # Root directory path
        allowed_methods GET POST;             # Allowed methods for CGI
        cgi_pass /usr/bin/sh;                 # REQUIRED: Path to Shell interpreter
    }
}

# Server with session management example (bonus part)
# (bonus: "Support cookies and session management")
server {
    listen 6060;                         # REQUIRED: Port to listen on
    host 127.0.0.1;                      # REQUIRED: Host IP address
    server_name session.example.com;     # Optional: Server names
    
    # Server-level session configuration
    # All session settings below are part of bonus implementation
    session_enable on;                   # Enable sessions for this server (Values: on, off)
    session_name WEBSERV_SESSION;        # Name of session cookie
    session_path /tmp/sessions;          # Where session data is stored
    session_timeout 1800;                # Session timeout in seconds (Range: 60-86400)
    
    location / {
        root /var/www/session;           # REQUIRED: Root directory path
        index index.html;
        allowed_methods GET POST;        # REQUIRED: Allowed methods
        autoindex off;
    }
    
    location /login {
        root /var/www/session;           # REQUIRED: Root directory path
        allowed_methods GET POST;        # REQUIRED: Allowed methods
        
        # Location-specific session settings (override server settings)
        session_timeout 3600;            # Longer timeout for login area (60-86400)
    }
}



#####################################################################
# CONFIGURATION FIELD REFERENCE TABLE
#####################################################################
# Directive               | Required? | Default    | Possible Values
#-------------------------|-----------|------------------------------
# listen                  | Yes       | N/A        | 1-65535
# host                    | Yes       | N/A        | IP address (IPv4)
# server_name             | No        | ""         | Domain names
# client_max_body_size    | No        | 1M         | Number + K/M/G suffix
# error_page              | No        | Err.html   | [code] [path]
# root                    | No        | /var/www/e | Valid filesystem path
# index                   | No	      | index.html | List of filenames
# allowed_methods         | No        | all        | GET, POST, DELETE
# autoindex               | No        | on         | on, off
# return                  | No        | N/A        | [code] [url]
# cgi_pass                | Yes***    | N/A        | Path to CGI executable
# cgi_timeout             | Yes***    | 60         | 60-86400 (seconds)
# session_enable          | No****    | off        | on, off
# session_timeout         | No****    | 1800       | 60-86400 (seconds)
# session_name            | No****    | N/A        | [name]
# session_path            | No****    | N/A        | [path]
# connection_timeout      | No        | 60         | 1-3600 (seconds)
#
# *** Required only for CGI locations
# **** Required only if implementing session management (bonus)
#
##################################################################
# Directives Allowed in:
# (Realated to Overwrite/Override)(Global->{Server->{Location{}}})
##################################################################
#| **Directive**        | **Global** | **Server** | **Location** |
#|----------------------|:----------:|:----------:|:------------:|
#| listen               | -          | Yes        | -            |
#| host                 | -          | Yes        | -            |
#| server_name          | -          | Yes        | -            |
#| error_page           | Yes        | Yes        | Yes          |
#| client_max_body_size | Yes        | Yes        | Yes          |
#| root                 | Yes        | Yes        | Yes          |
#| index                | Yes        | Yes        | Yes          |
#| allowed_methods      | Yes        | Yes        | Yes          |
#| autoindex            | Yes        | Yes        | Yes          |
#| return               | -          | -          | Yes          |
#| cgi_pass             | -          | -          | Yes          |
#| cgi_timeout          | -          | -          | Yes          |
#| session_enable       | -          | Yes        | -            |
#| session_name         | -          | Yes        | -            |
#| session_path         | -          | Yes        | -            |
#| session_timeout      | -          | Yes        | -            |
##################################################################
##################################################################
# NOTES:
##################################################################
# This configuration file covers all mandatory requirements:
# - Server configuration with host and port settings
# - Server name setup
# - Default server handling (first server for host:port)
# - Error page configuration
# - Client body size limits
# - Route configuration with HTTP methods
# - Directory listing controls
# - Default file settings for directories
# - HTTP redirections
# - Path mapping (/kapouet example)
# - File upload handling
# - CGI execution
# 
# bonus requirements:
# - Multiple CGI handling
# - Cookie and session management
# 
# helpful features:
# - Timeout settings to prevent server hanging
#####################################################################
